plugins {
    id 'java'
    id 'io.qameta.allure' version '2.11.2'
    id "io.freefair.lombok" version "6.0.0-m2"


}

group = 'org.example'
version = '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}
compileTestJava {
    options.encoding = 'UTF-8'
}
compileJava {
    options.encoding = 'UTF-8'
}
def allureVersion = "2.21.0",
    appiumVersion = "8.3.0",
    selenideVersion = "6.13.0",
    ownerVersion = "1.0.12",
    commonsVersion = "2.11.0"


allure {
    report {
        version.set(allureVersion)
    }
    adapter {
        aspectjWeaver.set(true)
        frameworks {
            junit5 {
                adapterVersion.set(allureVersion)
            }
        }
    }
}
dependencies {
    testImplementation(
            "org.aeonbits.owner:owner:$ownerVersion",
            "com.codeborne:selenide:$selenideVersion",
            "io.appium:java-client:$appiumVersion",
            "commons-io:commons-io:$commonsVersion",
            "io.rest-assured:rest-assured:5.3.1",
            "io.qameta.allure:allure-selenide:$allureVersion",
            "io.qameta.allure:allure-rest-assured:$allureVersion",
            "org.junit.jupiter:junit-jupiter:5.8.1",
            "io.rest-assured:json-schema-validator:5.3.1",
            "org.projectlombok:lombok:1.18.28"
    )
}


tasks.withType(Test).configureEach {
    systemProperties(System.getProperties())
    useJUnitPlatform(

    )


    testLogging {
        lifecycle {
            events "started", "skipped", "failed", "standard_error",
                    "standard_out"
            exceptionFormat "short"
        }
    }
}
task login(type: Test) {
    useJUnitPlatform {
        includeTags("Login")

    }
}
task main_page(type: Test) {
    useJUnitPlatform {
        includeTags("MainPage")

    }
}
task navigation_bar(type: Test) {
    useJUnitPlatform {
        includeTags("NavigationBar")

    }
}
task mobile(type: Test) {
    useJUnitPlatform {
        includeTags("Mobile")

    }
}